<div class="flex h-full max-h-full">
  <.menu active_tab={@active_tab} user={@user}>
      <.live_component
        id={:accounts_list}
        module={BudgetWeb.Transactions.AccountList}
        accounts={@accounts}
        accounts_selected_ids={@accounts_selected_ids}
      />

      <.live_component
        id={:accounts_list}
        module={BudgetWeb.Transactions.CategoriesList}
        categories={@categories}
        category_selected_ids={@category_selected_ids}
      />

  </.menu>
  <div class="flex flex-grow flex-col overflow-auto">

    <div class="flex flex-col p-4">
      <div class="flex">
        <.live_component
          id={:accounts_list}
          module={BudgetWeb.Transactions.DateRangePicker}
          dates={@dates}
        />
        <div class="flex items-start">
          <.link_button class="ml-auto" patch={~p"/transactions/new"}>New</.link_button>
          <%= if @live_action == :new_transaction do %>
            <.modal id="new-transaction" on_cancel={JS.patch(~p"/")} show>
              <.live_component
                module={BudgetWeb.TransactionLive.FormComponent}
                action={@live_action}
                id={:new}
                transaction={@new_transaction_payload}
                patch={~p"/?#{[from: "transaction"]}"}
              />
            </.modal>
          <% end %>
        </div>
      </div>
    </div>

    <div class="flex flex-col overflow-y-auto px-4">

        <%= if @live_action == :edit_transaction do %>
          <.modal id="edit-transaction" on_cancel={JS.patch(~p"/")} show>
              <.live_component
                module={BudgetWeb.TransactionLive.FormComponent}
                action={@live_action}
                id={@edit_transaction.id}
                transaction={@edit_transaction}
                patch={~p"/?#{[from: "transaction"]}"}
              />
          </.modal>
        <% end %>

        <%= if @live_action == :delete_transaction do %>
          <.modal id="delete-transaction" on_cancel={JS.patch(~p"/")} show>
              <%= case @confirm_delete.delete_state do %>
                <% :recurrency -> %>
                  This transaction is associated to a recurrency. What do you want to do about it?

                  <div>
                    <.button class="btn btn-danger btn-sm btn-block mt-2" phx-click="transaction-delete" phx-value-delete-mode="transaction">
                      Delete just this transaction
                    </.button>
                    <.button class="btn btn-danger btn-sm btn-block mt-2" phx-click="transaction-delete" phx-value-delete-mode="recurrency-all">
                      Delete this transaction and future transactions
                    </.button>
                  </div>

                <% :recurrency_with_future -> %>
                  This transaction is associated to a recurrency. Future transactions from this recurrency have already been updated, so what do you want to do about it?
                    <div>
                      <.button class="btn btn-danger btn-sm btn-block mt-2" phx-click="transaction-delete" phx-value-delete-mode="transaction">
                        Delete just this transaction
                      </.button>
                      <.button class="btn btn-danger btn-sm btn-block mt-2" phx-click="transaction-delete" phx-value-delete-mode="recurrency-keep-future">
                        Delete this transaction with future ones but keep changed ones
                      </.button>
                      <.button class="btn btn-danger btn-sm btn-block mt-2" phx-click="transaction-delete" phx-value-delete-mode="recurrency-all">
                        Delete this transaction and all future ones
                      </.button>
                    </div>

                <% :regular -> %>
                  Do you confirm deleting this transaction?
                  <div>
                    <.button class="btn btn-danger btn-sm btn-block mt-2" phx-click="transaction-delete" phx-value-delete-mode="transaction">
                      Yes
                    </.button>
                  </div>
              <% end %>
          </.modal>
        <% end %>

        <div id="transactions" class="flex flex-col space-y-1.5" phx-hook="Sortable">
          <div id="previous-balance" class="flex bg-slate-100 px-4 py-1.5 rounded-lg hover:bg-slate-200">
            <div class="w-[100px] px-1">
              <%= format_date(Timex.shift(Enum.at(@dates, 0), days: -1)) %>
            </div>
            <div class="flex-1 px-1 flex items-center gap-2">
              <input 
                type="checkbox" 
                phx-click="toggle-previous-balance" 
                checked={@previous_balance} 
              />

              Previous balance
            </div>
            <div class="w-[10%] px-1">
            </div>
            <div class={"w-[10%] px-1 flex items-center gap-2 justify-end"}>
              <.tooltiped id={"tooltip-partial-balance"} tooltip={"Show partial balance"}>
                <input 
                  type="checkbox" 
                  phx-click="toggle-partial-balance" 
                  checked={@partial_balance} 
                />
              </.tooltiped>
              <.currency value={Enum.at(@balances, 0)} />
            </div>
            <div class="w-[5%] px-1">
            </div>
          </div>

          <div 
            :for={{transaction, ix} <- Enum.with_index(@transactions)} 
            id={"transaction-#{transaction.id}"} 
            class={[
              "group list-group-item item-draggable flex",
              (if (is_binary(transaction.id) && String.starts_with?(transaction.id, "recurrency")) || not transaction.paid, do: "bg-slate-400", else: "bg-slate-100"),
              "px-4 py-1.5 rounded-lg hover:bg-slate-200"
            ]}
          >

            <div class="px-1 w-[100px]">
              <%= format_date(transaction.date) %>
            </div>
            <div class="flex-1 px-1 flex">
              <.link patch={~p"/transactions/#{transaction}/edit"}>
                <%= description(transaction) %>
                <%= if transaction.recurrency_transaction && transaction.recurrency_transaction.parcel do %>
                  <span>
                    <%= "(#{transaction.recurrency_transaction.parcel}/#{transaction.recurrency_transaction.parcel_end})" %>
                  </span>
                <% end %>
              </.link>
              <div class="ml-auto">
                <%= if transaction.recurrency_transaction do %>
                  <.tooltiped id={"tooltip-recurrency-#{transaction.id}"} tooltip={"Recurrency"}>
                    <.icon name="hero-arrow-path" />
                  </.tooltiped>
                <% end %>
              </div>
            </div>
            <div class="w-[200px] px-1 text-center">
              <% originator = Transactions.originator(transaction) %>

              <%= if originator && originator.__struct__ == Budget.Transactions.Originator.Regular do %>
                <%= if length(transaction.originator_regular.category.path) == 0 do %>
                  <%= transaction.originator_regular.category.name %>
                <% else %>
                  <.tooltiped id={"category-detail-#{transaction.id}"} tooltip={category_tooltip(@categories, transaction.originator_regular.category)}>
                    <span>
                      <%= transaction.originator_regular.category.name %>
                    </span>
                  </.tooltiped>
                <% end %>

              <% end %>

              <%= if originator && originator.__struct__ == Budget.Transactions.Originator.Transfer do %>
                <.tooltiped id={"transfer-icon-#{transaction.id}"} tooltip="Transfer">
                  <.icon name="hero-arrows-up-down" />
                </.tooltiped>
              <% end %>
            </div>
            <div class="w-[200px] px-1 text-center">
              <%= transaction.account.name %>
            </div>
            <div class={"w-[10%] text-right px-1"}>
              <.currency value={transaction.value} />
            </div>

            <div :if={@partial_balance} class={"w-[10%] text-right px-1"}>
              <.currency value={Enum.at(@balances, ix + 1)} />
            </div>

            <div class="w-[5%] px-1 flex gap-x-1">
              <.link patch={~p"/transactions/#{transaction}/delete"} 
                data-testid={"delete-#{transaction.id}"}
                class="flex">
                <.tooltiped id={"tooltip-delete-#{transaction.id}"} tooltip="Delete">
                  <.icon name="hero-trash" />
                </.tooltiped>
              </.link>
              <div class="flex">
                <.icon name="hero-arrows-up-down" class="sortable-handle cursor-pointer" />
              </div>
            </div>
          </div>

          <div 
            :if={Enum.empty?(@transactions)} 
            id={"empty-transactions"} 
            class=" text-center bg-slate-100 px-4 py-1.5 rounded-lg hover:bg-slate-200"
          >
            No transactions in this period.
          </div>

          <div id="next-balance" class="flex bg-slate-100 px-4 py-1.5 rounded-lg hover:bg-slate-200">
            <div class="w-[100px] px-1">
              <%= format_date(Enum.at(@dates, 1)) %>
            </div>
            <div class="flex-1 px-1">
              Next balance
            </div>
            <div class="w-[10%] px-1">
            </div>
            <div class={"w-[10%] text-right px-1"}>
              <.currency value={Enum.at(@balances, -1)} />
            </div>
            <div class="w-[5%] px-1">
            </div>
          </div>
        </div>
    </div>
  </div>

  <%= if @live_action in [:new_account, :edit_account] do %>
    <.modal id="modal-account" on_cancel={JS.patch(~p"/")} show title={@account.id && "Edit account" || "New Account"}>
      <.live_component
        module={BudgetWeb.AccountLive.FormComponent}
        id={@account.id || :new}
        action={@live_action}
        account={@account}
        patch={~p"/?#{[from: "account"]}"}
      />
    </.modal>
  <% end %>

  <%= if @live_action in [:new_category, :edit_category] do %>
    <.modal id="modal-category" on_cancel={JS.patch(~p"/")} show>
        <.live_component
          module={BudgetWeb.CategoryLive.FormComponent}
          title={@category.id && "Edit category" || "New Category"}
          id={@category.id || :new}
          action={@live_action}
          category={@category}
          patch={~p"/?#{[from: "category"]}"}
        />
    </.modal>
  <% end %>

  <%= if @live_action == :new_category_child do %>
    <.modal id="modal-category" on_cancel={JS.patch(~p"/")} show>
        <.live_component
          module={BudgetWeb.CategoryLive.FormComponent}
          id={@category.id || :new}
          title={@category.id && "Edit category" || "New Category"}
          action={:new_category}
          category={%Transactions.Category{}}
          parent={@category}
          patch={~p"/?#{[from: "category"]}"}
        />
    </.modal>
  <% end %>
</div>

